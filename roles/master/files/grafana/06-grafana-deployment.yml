---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:8.5.0
        imagePullPolicy: IfNotPresent
        env:
          - name: SECRET_USERNAME 
            valueFrom: 
              secretKeyRef: 
                name: grafana-auth
                key: admin-user
          - name: SECRET_PASSWORD  
            valueFrom: 
              secretKeyRef: 
                name: grafana-auth
                key: admin-password
        ports:
        - name: grafana
          containerPort: 3000
          protocol: TCP
        resources:
          limits:
            memory: "1Gi"
            cpu: "1000m"
          requests: 
            memory: 500M
            cpu: "500m"
        volumeMounts:
          - name: grafana-ini
            mountPath: /etc/grafana
            # subPath: grafana.ini
          - name: grafana-datasources
            mountPath: /etc/grafana/provisioning/datasources
            # subPath: prometheus.yml
          - name: grafana-dashboard-providers
            mountPath: /etc/grafana/provisioning/dashboards
            # subPath: dashboardproviders.yml
          - name: grafana-dashboards
            mountPath: /var/lib/grafana/dashboards
          - name: data
            mountPath: /home/ubuntu/data/grafana
      volumes:
        - name: grafana-ini
          configMap:
            name: grafana-ini
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-dashboard-providers
          configMap:
            name: grafana-dashboard-providers
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards 
        - name: data
          persistentVolumeClaim:
            claimName: pvc-grafana
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: prometheus
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '3000'
spec:
  selector: 
    app: grafana
  type: NodePort  
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 32000